{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movie","getMovies","a","axios","get","movies","data","setState","this","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","style","textAlign","width","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"6WAiDeA,MA5Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,qBAAKC,UAAU,QAAf,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTC,OAAQA,EACRC,OAAQA,IARd,UAYE,qBAAKK,IAAKN,EAAQO,IAAKP,EAAQF,MAAOA,IACtC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOO,KAAI,SAACC,EAAOC,GAClB,OACE,oBAAgBR,UAAU,gBAA1B,SACGO,GADMC,QAMf,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAG,KAAhD,kBCoBKC,G,kNA/CbP,MAAQ,CACNQ,WAAW,EACXC,MAAO,I,EAETC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yEANQ,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAKZ,EAAKE,SAAS,CAAEF,SAAQN,WAAW,IARzB,2C,uDAUZ,WACES,KAAKP,c,oBAEP,WAAU,IAAD,EACuBO,KAAKjB,MAA3BQ,EADD,EACCA,UAAWM,EADZ,EACYA,OACnB,OACE,yBAASjB,UAAU,YAAnB,SACGW,EACC,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGiB,EAAOX,KAAI,SAACM,GACX,OACE,cAAC,EAAD,CAEElB,GAAIkB,EAAMlB,GACVC,KAAMiB,EAAMjB,KACZC,MAAOgB,EAAMhB,MACbC,QAASe,EAAMf,QACfC,OAAQc,EAAMS,mBACdtB,OAAQa,EAAMb,QANTa,EAAMlB,e,GA/BV4B,IAAMC,Y,MCWVC,MAbf,WACE,OAEE,cADA,CACA,OAAKxB,UAAU,mBAAf,UACE,gJAIA,kECoBSyB,E,uKA5Bb,WAAqB,IAAD,EACYL,KAAKM,MAA3BC,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAASxB,OACXyB,EAAQE,KAAK,O,oBAGjB,WAAU,IACA3B,EAAUiB,KAAKM,MAAMC,SAArBxB,MACR,OAAIA,EAEA,sBAAK4B,MAAO,CAAEC,UAAW,UAAzB,UACE,qBAAK5B,IAAKD,EAAML,OAAQO,IAAKF,EAAML,OAAQF,MAAOO,EAAMP,QACxD,8BAAMO,EAAMP,QACZ,8BAAMO,EAAMR,OACZ,6BACGQ,EAAMJ,OAAOO,KAAI,SAACC,EAAOC,GACxB,OAAO,6BAAiBD,GAARC,QAGpB,mBAAGuB,MAAO,CAAEE,MAAO,SAAnB,SAA+B9B,EAAMN,aAIlC,S,GAxBQyB,IAAMC,W,MCWZW,MATf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCYSkC,MAZf,WACE,OAEE,cADA,CACC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW5B,IACxC,cAAC,IAAD,CAAO0B,KAAK,SAASE,UAAWd,IAChC,cAAC,IAAD,CAAOY,KAAK,aAAaE,UAAWb,QCX1Cc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f6490f1c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie/${id}`,\n          state: {\n            year: year, //그냥 year로 적는 것도 가능하다.\n            title: title,\n            summary: summary,\n            poster: poster,\n            genres: genres,\n          },\n        }}\n      >\n        <img src={poster} alt={poster} title={title}></img>\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => {\n              return (\n                <li key={index} className=\"genres__genre\">\n                  {genre}\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movie: [],\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false }); //{movies: movies} 가능\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state; //ES6 문법\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n  return (\n    //About(props) 했을때 props = {history, location, match, staticContext} react-router의 작품이다.\n    <div className=\"about__container\">\n      <span>\n        “Freedom is the freedom to say that two plus two make four. If that is\n        granted, all else follows.”\n      </span>\n      <span>− George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props; //props가 전달될때 기본적으로 Detail객체 안에 있다.\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n  }\n  render() {\n    const { state } = this.props.location;\n    if (state) {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <img src={state.poster} alt={state.poster} title={state.title}></img>\n          <div>{state.title}</div>\n          <div>{state.year}</div>\n          <ul>\n            {state.genres.map((genre, index) => {\n              return <li key={index}>{genre}</li>;\n            })}\n          </ul>\n          <p style={{ width: \"500px\" }}>{state.summary}</p>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n}\n//<a href=\"\">의 새로고침 문제를 <Link to=\"url\"/>로 고침\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    // path about.js로 들어가서 그리고 component About을 보여줘! 라는 뜻이다.\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n//너가 link를 쓰고 있는 한 router안에 모든 것을 넣어야 한다.\n//네비게이션은 꼭 router안에 있어야 한다. 즉, 너가 link를 사용한다면 이것은 라우터 안에 있어야한다.\n//exact는 동시 랜더링을 고치는법\n//먼저 Router를 만들고 그 다음 Router안에는 스크린을 넣는 거야. 그래서 원하는 만큼 path를 만들 수 있어\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}